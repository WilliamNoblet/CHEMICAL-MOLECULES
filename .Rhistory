#install.packages("plotly")
library(shiny)
library(plotly)
library(shinyjs)
library(plotly)
# Générer les points sur la sphère
generate_sphere_mesh <- function(radius = 1, n = 100) {
phi <- seq(0, pi, length.out = n)
theta <- seq(0, 2 * pi, length.out = n)
x <- outer(sin(phi), cos(theta)) * radius
y <- outer(sin(phi), sin(theta)) * radius
z <- outer(cos(phi), rep(1, n)) * radius
list(x = x, y = y, z = z)
}
# Générer les points pour une sphère de rayon 1
sphere_mesh <- generate_sphere_mesh(radius = 1, n = 100)
# Créer le graphique 3D avec plotly en utilisant une couleur unique
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
surfacecolor = rep(1, length(sphere_mesh$x)) # Ajouter une surface colorée unique
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(title = 'X'),
yaxis = list(title = 'Y'),
zaxis = list(title = 'Z')
)
)
# Afficher le graphique
fig
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
surfacecolor = rep(1, length(sphere_mesh$x)), # Ajouter une surface colorée unique
colors = list(c(0, 'blue')) # Définir la couleur unique (par exemple, 'blue')
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(title = 'X'),
yaxis = list(title = 'Y'),
zaxis = list(title = 'Z')
)
)
# Afficher le graphique
fig
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
surfacecolor = rep(1, length(sphere_mesh$x)), # Ajouter une surface colorée unique
surfacecolor = list(c(0, 'blue')) # Définir la couleur unique (par exemple, 'blue')
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(title = 'X'),
yaxis = list(title = 'Y'),
zaxis = list(title = 'Z')
)
)
# Afficher le graphique
fig
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
surfacecolor = rep(1, length(sphere_mesh$x)), # Ajouter une surface colorée unique
surfacecolor = list(c(0, 'red')) # Définir la couleur unique (par exemple, 'blue')
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(title = 'X'),
yaxis = list(title = 'Y'),
zaxis = list(title = 'Z')
)
)
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
colorscale = list(c(0, 'red'), c(1, 'red')),  # Spécifier une couleur unique
showscale = FALSE  # Désactiver l'affichage de l'échelle de couleurs
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(title = 'X'),
yaxis = list(title = 'Y'),
zaxis = list(title = 'Z')
)
)
# Afficher le graphique
fig
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
colorscale = list(c(0, 'red'), c(1, 'red')),  # Spécifier une couleur unique
showscale = FALSE  # Désactiver l'affichage de l'échelle de couleurs
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
yaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
zaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
)
)
)
# Afficher le graphique
fig
# Générer les points sur la sphère
generate_sphere_mesh <- function(radius = 1, n = 100) {
phi <- seq(0, pi, length.out = n)
theta <- seq(0, 2 * pi, length.out = n)
x <- outer(sin(phi), cos(theta)) * radius
y <- outer(sin(phi), sin(theta)) * radius
z <- outer(cos(phi), rep(1, n)) * radius
list(x = x, y = y, z = z)
}
# Générer les points pour une sphère de rayon 1
sphere_mesh <- generate_sphere_mesh(radius = 1, n = 100)
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
colorscale = list(c(0, 'red'), c(1, 'red')),  # Spécifier une couleur unique
showscale = FALSE  # Désactiver l'affichage de l'échelle de couleurs
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
yaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
zaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
)
)
)
# Afficher le graphique
fig
# Générer les points pour une sphère de rayon 1
sphere_mesh <- generate_sphere_mesh(radius = 1, n = 10)
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
colorscale = list(c(0, 'red'), c(1, 'red')),  # Spécifier une couleur unique
showscale = FALSE  # Désactiver l'affichage de l'échelle de couleurs
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
yaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
zaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
)
)
)
# Afficher le graphique
fig
# Générer les points pour une sphère de rayon 1
sphere_mesh <- generate_sphere_mesh(radius = 1, n = 100)
fig <- plot_ly(
x = ~sphere_mesh$x,
y = ~sphere_mesh$y,
z = ~sphere_mesh$z,
type = 'surface',
colorscale = list(c(0, 'red'), c(1, 'red')),  # Spécifier une couleur unique
showscale = FALSE  # Désactiver l'affichage de l'échelle de couleurs
) %>%
layout(
title = "3D Sphere",
scene = list(
xaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
yaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
),
zaxis = list(
title = '',
showgrid = FALSE,
zeroline = FALSE,
visible = FALSE
)
)
)
# Afficher le graphique
fig
View(sphere_mesh)
